{"version":3,"sources":["components/Navbar.js","numers.js","components/Input.js","components/Button.js","components/Radio.js","containers/Numer.js","containers/App.js","index.js"],"names":["Navbar","links","className","map","link","key","href","numers","id","title","desc","placeholder","url","style","background","Input","onchange","type","onChange","Button","onclick","onClick","Radio","name","value","defaultChecked","htmlFor","Numer","props","fetch","state","field","then","response","text","catch","fetchCatch","setState","trivia","currUrl","calcState","json","output","isError","event","target","radioChange","operation","expression","result","numer","error","this","includes","length","split","s","join","processResult","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a69f3f21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = ({ links }) => {\r\n    return (\r\n        <nav className=\"fixed bg-black-20 top-0 left-0 right-0\">\r\n            <ul className=\"flex list items-center ma0 pl-1\">\r\n                <div className=\"flex ml-auto\">\r\n                    {\r\n                        links.map(link => <li key={link} className=\"pa3 hover-bg-black-10\"><a className=\"no-underline white\" href={`#${link}`}>{link}</a></li>)\r\n                    }\r\n                </div>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","const numers = [\r\n    {\r\n        id: \"trivia\",\r\n        title: \"number facts\",\r\n        desc: \"enter a number and find an interesting facts about it\",\r\n        placeholder: \"1,22,101,...\",\r\n        url: \"http://numbersapi.com\",\r\n        style: {\r\n            background: \"#27ae60\"\r\n        }\r\n    },\r\n    {\r\n        id: \"basic\",\r\n        title: \"prime factor\",\r\n        desc: \"find prime factor of a number or determine a prime number\",\r\n        placeholder: \"1,22,101,...\",\r\n        url: \"https://newton.now.sh/factor\",\r\n        style: {\r\n            background: \"#f39c12\"\r\n\r\n        }\r\n    },\r\n    {\r\n        id: \"medium\",\r\n        title: \"logarithm\",\r\n        desc: \"auto generate simple logarithm\",\r\n        placeholder: \"2|3 - 2log3\",\r\n        url: \"https://newton.now.sh/log\",\r\n        style: {\r\n            background: \"#2980b9\"\r\n        }\r\n    },\r\n    {\r\n        id: \"advanced\",\r\n        title: \"calculus\",\r\n        desc: \"find solution for simple calculus expression\",\r\n        placeholder: \"1, x+2, x^2+1, ..\",\r\n        url: \"https://newton.now.sh\",\r\n        style: {\r\n            background: \"#16a085\"\r\n        }\r\n    }\r\n];\r\n\r\nexport default numers;","import React from 'react'\r\n\r\n\r\nconst Input = ({ placeholder, onchange }) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className=\"br2 bn pa1\"\r\n            placeholder={placeholder}\r\n            onChange={onchange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Button = ({ onclick }) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"bn pointer pa1 ma1 br2 white bg-black-40 grow\"\r\n            onClick={onclick}>\r\n            numer\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nconst Radio = ({ onchange }) => {\r\n    return (\r\n        <div onChange={onchange}>\r\n            <input type=\"radio\" id=\"derive\" name=\"calc\" value=\"derive\" defaultChecked />\r\n            <label htmlFor=\"derive\" className=\"ml2 white\"  >Derive</label>\r\n            <input type=\"radio\" id=\"integrate\" name=\"calc\" className=\"ml2 bg-black-40\" value=\"integrate\" />\r\n            <label htmlFor=\"integrate\" className=\"ml2 white\">Integrate</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Radio;","import React, { Component } from 'react';\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport Radio from '../components/Radio';\r\n\r\nexport default class Numer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            field: \"\",\r\n            output: {\r\n                operation: \"\",\r\n                expression: \"\",\r\n                result: \"\"\r\n            },\r\n            trivia: \"\",\r\n            isError: false\r\n        };\r\n        this.background = this.props.numer.style;\r\n        this.title = this.props.numer.title;\r\n        this.desc = this.props.numer.desc;\r\n        this.placeholder = this.props.numer.placeholder;\r\n        this.url = this.props.numer.url;\r\n        this.id = this.props.numer.id;\r\n        if (this.id === \"advanced\") {\r\n            this.calcState = \"derive\";\r\n        } else {\r\n            this.calcState = \"\";\r\n        }\r\n    }\r\n\r\n    onClick = () => {\r\n        if (this.id === \"trivia\") {\r\n            fetch(`${this.url}/${this.state.field}/trivia`)\r\n                .then(response => response.text())\r\n                .catch(this.fetchCatch)\r\n                .then(response => this.setState({ trivia: response }));\r\n        } else {\r\n            const currUrl = this.id === \"advanced\" ? `${this.url}/${this.calcState}` : this.url;\r\n            fetch(`${currUrl}/${this.state.field}`)\r\n                .then(response => response.json())\r\n                .catch(this.fetchCatch)\r\n                .then(response => this.setState({ output: response }));\r\n        }\r\n    }\r\n\r\n    fetchCatch = () => {\r\n        this.setState({ isError: true });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({ field: event.target.value });\r\n    }\r\n\r\n    radioChange = event => {\r\n        this.calcState = event.target.value;\r\n    }\r\n\r\n    processResult() {\r\n        const error = `can't process your number or expression`;\r\n        if (!this.state.isError) {\r\n            if (this.id === \"trivia\") {\r\n                if (this.state.trivia.includes(\"Cannot\")) {\r\n                    return error;\r\n                }\r\n                return this.state.trivia;\r\n            }\r\n            else {\r\n                if (this.state.output.result === \"NaN\") {\r\n                    return error;\r\n                } else {\r\n                    const result = this.state.output.result;\r\n                    if (this.id === \"basic\" && result !== \"\" && result.length > 1) {\r\n                        return result.split(\" \").map(s => `${s[0]}`).join(\", \");\r\n                    }\r\n                }\r\n                return this.state.output.result;\r\n            }\r\n        }\r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.background} id={this.id} className=\"pa5 tc flex-column justify-center\">\r\n                <h1 className=\"ma0 white-80\">{this.title}</h1>\r\n                <p className=\"f5 white-50\">{this.desc}</p>\r\n                <div className=\"flex justify-center items-center\">\r\n                    <Input onchange={this.onChange} placeholder={this.placeholder} type={this.title} />\r\n                    <Button onclick={this.onClick} />\r\n                </div>\r\n                {this.id === \"advanced\" ? <Radio onchange={this.radioChange} /> : \"\"}\r\n                <div className=\"flex justify-center pa1\">\r\n                    <div className=\"w-70 ba br2 b--dashed bw1 b--white pa3\">\r\n                        <p className=\"white f4\"> {this.processResult()} </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport numers from '../numers';\r\nimport Numer from './Numer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar links={numers.map(numer => numer.id)} />\r\n      <div className=\"banner vh-100 flex flex-column justify-center items-center tc\">\r\n        <h1 className=\"white\">NUMERY</h1>\r\n        <h2 className=\"white-60\">\r\n          this is simple react project for fun,\r\n          build using some APIs about number and mathematical\r\n        </h2>\r\n      </div>\r\n      {numers.map(numer => {\r\n        return (\r\n          <Numer numer={numer} key={numer.id} />\r\n        )\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}